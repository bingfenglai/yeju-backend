<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>yeju-dubbo-service</artifactId>
        <groupId>pers.lbf</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>yeju-redis-service</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <mainClassName>pers.lbf.yeju.redisServer.start.RedisServer</mainClassName>
    </properties>

    <dependencies>



        <dependency>
            <groupId>pers.lbf</groupId>
            <artifactId>yeju-redis-service-interfaces</artifactId>
            <version>1.0.0</version>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>


        <!--            dubbo 依赖 服务调用-->
        <dependency>
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo-spring-boot-starter</artifactId>
            <version>${dubbo.version}</version>
            <scope>compile</scope>
        </dependency>

        <!--            服务配置中心-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
            <version>${spring-cloud-alibaba.version}</version>
        </dependency>

        <!--            服务发现-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
            <version>${spring-cloud-alibaba.version}</version>
        </dependency>

        <!--            服务流控-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
            <version>${spring-cloud-alibaba.version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-alibaba-sentinel-datasource</artifactId>
            <version>${spring-cloud-alibaba.version}</version>
        </dependency>

        <!--            sentinel整合dubbo-->
        <dependency>
            <groupId>com.alibaba.csp</groupId>
            <artifactId>sentinel-apache-dubbo-adapter</artifactId>

        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>

        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>



        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>



    </dependencies>



    <build>

<!--        <resources>-->
<!--            <resource>-->
<!--                <directory>src/main/java</directory>-->
<!--                <includes>-->
<!--                    <include>**/*.properties</include>-->
<!--                    <include>**/*.xml</include>-->
<!--                </includes>-->
<!--                <filtering>true</filtering>-->
<!--            </resource>-->
<!--            <resource>-->
<!--                <directory>src/main/resources</directory>-->
<!--                <excludes>-->
<!--                    <exclude>**/*.properties</exclude>-->
<!--                    <exclude>**/*.yml</exclude>-->
<!--                    <exclude>**/*.xml</exclude>-->
<!--                </excludes>-->
<!--                <filtering>false</filtering>-->
<!--            </resource>-->
<!--        </resources>-->




        <plugins>


            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-compiler-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <source>1.8</source>-->
<!--                    <target>1.8</target>-->
<!--                    <fork>true</fork>-->
<!--                    <skip>true</skip>-->
<!--                    <encoding>UTF-8</encoding>-->
<!--                </configuration>-->
<!--            </plugin>-->

<!--            <plugin>-->
<!--                <artifactId>maven-jar-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <archive>-->
<!--                        <manifest>-->
<!--                            <addClasspath>true</addClasspath>-->
<!--                            <classpathPrefix>../lib/</classpathPrefix>-->
<!--                            <useUniqueVersions>false</useUniqueVersions>-->
<!--                            <mainClass>${mainClassName}</mainClass>-->
<!--                        </manifest>-->
<!--                        <manifestEntries>-->
<!--                            <Class-Path>./</Class-Path>-->
<!--                        </manifestEntries>-->
<!--                    </archive>-->
<!--                    <excludes>-->
<!--                        <exclude>*.properties</exclude>-->
<!--                        <exclude>*.properties</exclude>-->
<!--                        <exclude>*.yml</exclude>-->
<!--                        <exclude>*.xml</exclude>-->
<!--                    </excludes>-->
<!--                </configuration>-->
<!--            </plugin>-->

<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-dependency-plugin</artifactId>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>copy</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>copy-dependencies</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <outputDirectory>-->
<!--                                ../../docker/${project.build.finalName}/lib-->
<!--                            </outputDirectory>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->







<!--&lt;!&ndash;            docker 打包&ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>com.spotify</groupId>-->
<!--                <artifactId>docker-maven-plugin</artifactId>-->
<!--                <version>1.0.0</version>-->
<!--                <configuration>-->
<!--                    <dockerDirectory>/docker</dockerDirectory>-->
<!--                    <resources>-->
<!--                        <resource>-->
<!--                            <targetPath>/</targetPath>-->
<!--                            <directory>${project.build.directory}</directory>-->
<!--                            <include>${project.build.finalName}.jar</include>-->
<!--                        </resource>-->
<!--                    </resources>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--&lt;!&ndash;            迁移到一个统一的目录&ndash;&gt;-->
<!--            <plugin>-->
<!--                <artifactId>maven-antrun-plugin</artifactId>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>package</phase>-->
<!--                        <configuration>-->
<!--                            <tasks>-->
<!--&lt;!&ndash;                                拷贝可执行文件&ndash;&gt;-->
<!--                                <copy todir="../../docker/${project.build.finalName}/bin"-->
<!--                                      file="target/${project.artifactId}-${project.version}.${project.packaging}"/>-->
<!--&lt;!&ndash;                                拷贝执行脚本&ndash;&gt;-->
<!--                                <copy todir="../../docker/${project.build.finalName}/bin"-->
<!--                                      file="script/start.cmd"/>-->
<!--&lt;!&ndash;                                拷贝配置文件&ndash;&gt;-->
<!--                                <copy todir="../../docker/${project.build.finalName}/bin/config"-->
<!--                                      file="src/main/resources/application.yml"/>-->

<!--                                <copy todir="../../docker/${project.build.finalName}/bin/config"-->
<!--                                      file="src/main/resources/application-dev.yml"/>-->

<!--                                <copy todir="../../docker/${project.build.finalName}/bin/config"-->
<!--                                      file="src/main/resources/bootstrap.properties"/>-->

<!--                                <copy todir="../../docker/${project.build.finalName}/bin/config"-->
<!--                                      file="src/main/resources/config/logback.xml"/>-->
<!--                            </tasks>-->
<!--                        </configuration>-->
<!--                        <goals>-->
<!--                            <goal>run</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>


</project>